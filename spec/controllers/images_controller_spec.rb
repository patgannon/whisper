require 'spec_helper'

# This spec was generated by rspec-rails when you ran the scaffold generator.
# It demonstrates how one might use RSpec to specify the controller code that
# was generated by the Rails when you ran the scaffold generator.

describe ImagesController do
  before :each do
    create_default_project
    Gallery.stub(:find) {mock_gallery}
  end
  
  def mock_image(stubs={})
    @mock_image ||= mock_model(Image, stubs).as_null_object
  end

  def mock_gallery(stubs={})
    @mock_gallery ||= mock_model(Gallery, stubs).as_null_object
  end

  describe "GET show" do
    it "assigns the requested image as @image" do
      Image.stub(:find).with("37") { mock_image }
      get :show, :gallery_id => "2352", :id => "37"
      assigns(:image).should be(mock_image)
    end
  end

  describe "POST create" do
    describe "with valid params" do
      it "assigns a newly created image as @image" do
        mock_gallery.images.stub(:build).with({'these' => 'params'}) { mock_image(:save => true) }
        post :create, :gallery_id => "2352", :image => {'these' => 'params'}
        assigns(:image).should be(mock_image)
      end

      it "redirects to the created image" do
        mock_gallery.images.stub(:build) { mock_image(:save => true) }
        post :create, :gallery_id => "2352", :image => {}
      end
    end

    describe "with invalid params" do
      it "assigns a newly created but unsaved image as @image" do
        mock_gallery.images.stub(:build).with({'these' => 'params'}) { mock_image(:save => false) }
        mock_image.stub_chain("errors.empty?", false)
        post :create, :gallery_id => "2352", :image => {'these' => 'params'}
      end

      it "re-renders the 'new' template" do
        mock_gallery.images.stub(:build) { mock_image(:save => false) }
        mock_image.stub_chain("errors.empty?", false)
        post :create, :gallery_id => "2352", :image => {}
        response.should render_template("new")
      end
    end
  end
end
